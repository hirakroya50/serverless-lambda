{
  "service": {
    "service": "serverless-lambda",
    "serviceObject": {
      "name": "serverless-lambda"
    },
    "provider": {
      "name": "aws",
      "runtime": "nodejs20.x",
      "region": "ap-south-1",
      "stage": "dev",
      "versionFunctions": true,
      "compiledCloudFormationTemplate": {
        "AWSTemplateFormatVersion": "2010-09-09",
        "Description": "The AWS CloudFormation template for this Serverless application",
        "Resources": {
          "ApiLogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "/aws/lambda/serverless-lambda-dev-api"
            }
          },
          "ApiUnderscoretwoLogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "/aws/lambda/serverless-lambda-dev-api_two"
            }
          },
          "ApiUnderscorethreeLogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "/aws/lambda/serverless-lambda-dev-api_three"
            }
          },
          "IamRoleLambdaExecution": {
            "Type": "AWS::IAM::Role",
            "Properties": {
              "AssumeRolePolicyDocument": {
                "Version": "2012-10-17",
                "Statement": [
                  {
                    "Effect": "Allow",
                    "Principal": {
                      "Service": [
                        "lambda.amazonaws.com"
                      ]
                    },
                    "Action": [
                      "sts:AssumeRole"
                    ]
                  }
                ]
              },
              "Policies": [
                {
                  "PolicyName": {
                    "Fn::Join": [
                      "-",
                      [
                        "serverless-lambda",
                        "dev",
                        "lambda"
                      ]
                    ]
                  },
                  "PolicyDocument": {
                    "Version": "2012-10-17",
                    "Statement": [
                      {
                        "Effect": "Allow",
                        "Action": [
                          "logs:CreateLogStream",
                          "logs:CreateLogGroup",
                          "logs:TagResource"
                        ],
                        "Resource": [
                          {
                            "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/serverless-lambda-dev*:*"
                          }
                        ]
                      },
                      {
                        "Effect": "Allow",
                        "Action": [
                          "logs:PutLogEvents"
                        ],
                        "Resource": [
                          {
                            "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/serverless-lambda-dev*:*:*"
                          }
                        ]
                      }
                    ]
                  }
                }
              ],
              "Path": "/",
              "RoleName": {
                "Fn::Join": [
                  "-",
                  [
                    "serverless-lambda",
                    "dev",
                    {
                      "Ref": "AWS::Region"
                    },
                    "lambdaRole"
                  ]
                ]
              }
            }
          },
          "ApiLambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": "serverless-framework-deployments-ap-south-1-8910130b-bf30",
                "S3Key": "serverless/serverless-lambda/dev/1734159030147-2024-12-14T06:50:30.147Z/serverless-lambda.zip"
              },
              "Handler": "helloo.handler",
              "Runtime": "nodejs20.x",
              "FunctionName": "serverless-lambda-dev-api",
              "MemorySize": 1024,
              "Timeout": 6,
              "Role": {
                "Fn::GetAtt": [
                  "IamRoleLambdaExecution",
                  "Arn"
                ]
              }
            },
            "DependsOn": [
              "ApiLogGroup"
            ]
          },
          "ApiUnderscoretwoLambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": "serverless-framework-deployments-ap-south-1-8910130b-bf30",
                "S3Key": "serverless/serverless-lambda/dev/1734159030147-2024-12-14T06:50:30.147Z/serverless-lambda.zip"
              },
              "Handler": "buy.handler",
              "Runtime": "nodejs20.x",
              "FunctionName": "serverless-lambda-dev-api_two",
              "MemorySize": 1024,
              "Timeout": 6,
              "Role": {
                "Fn::GetAtt": [
                  "IamRoleLambdaExecution",
                  "Arn"
                ]
              }
            },
            "DependsOn": [
              "ApiUnderscoretwoLogGroup"
            ]
          },
          "ApiUnderscorethreeLambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": "serverless-framework-deployments-ap-south-1-8910130b-bf30",
                "S3Key": "serverless/serverless-lambda/dev/1734159030147-2024-12-14T06:50:30.147Z/serverless-lambda.zip"
              },
              "Handler": "buy.handler",
              "Runtime": "nodejs20.x",
              "FunctionName": "serverless-lambda-dev-api_three",
              "MemorySize": 1024,
              "Timeout": 6,
              "Role": {
                "Fn::GetAtt": [
                  "IamRoleLambdaExecution",
                  "Arn"
                ]
              }
            },
            "DependsOn": [
              "ApiUnderscorethreeLogGroup"
            ]
          },
          "ApiLambdaVersion71LtuZ6DFDNZfqVno8ye1BDW3N6ouYST3jxB6YLf72E": {
            "Type": "AWS::Lambda::Version",
            "DeletionPolicy": "Retain",
            "Properties": {
              "FunctionName": {
                "Ref": "ApiLambdaFunction"
              },
              "CodeSha256": "kLoYtwM1/ArVUg5ce6kUCeCX3bHrdvaq9C6t8iGRYVE="
            }
          },
          "ApiUnderscoretwoLambdaVersionmr6Z3icNvrsJon2M7vLtQECUa3sITkZf62Pxq0cJCA": {
            "Type": "AWS::Lambda::Version",
            "DeletionPolicy": "Retain",
            "Properties": {
              "FunctionName": {
                "Ref": "ApiUnderscoretwoLambdaFunction"
              },
              "CodeSha256": "kLoYtwM1/ArVUg5ce6kUCeCX3bHrdvaq9C6t8iGRYVE="
            }
          },
          "ApiUnderscorethreeLambdaVersion96OwOpfN63Yy7xOh9LzwCzXXgRjrkekGuSAqq7FeqE": {
            "Type": "AWS::Lambda::Version",
            "DeletionPolicy": "Retain",
            "Properties": {
              "FunctionName": {
                "Ref": "ApiUnderscorethreeLambdaFunction"
              },
              "CodeSha256": "kLoYtwM1/ArVUg5ce6kUCeCX3bHrdvaq9C6t8iGRYVE="
            }
          },
          "HttpApi": {
            "Type": "AWS::ApiGatewayV2::Api",
            "Properties": {
              "Name": "dev-serverless-lambda",
              "ProtocolType": "HTTP"
            }
          },
          "HttpApiStage": {
            "Type": "AWS::ApiGatewayV2::Stage",
            "Properties": {
              "ApiId": {
                "Ref": "HttpApi"
              },
              "StageName": "$default",
              "AutoDeploy": true,
              "DefaultRouteSettings": {
                "DetailedMetricsEnabled": false
              }
            }
          },
          "ApiLambdaPermissionHttpApi": {
            "Type": "AWS::Lambda::Permission",
            "Properties": {
              "FunctionName": {
                "Fn::GetAtt": [
                  "ApiLambdaFunction",
                  "Arn"
                ]
              },
              "Action": "lambda:InvokeFunction",
              "Principal": "apigateway.amazonaws.com",
              "SourceArn": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":execute-api:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId"
                    },
                    ":",
                    {
                      "Ref": "HttpApi"
                    },
                    "/*"
                  ]
                ]
              }
            }
          },
          "HttpApiIntegrationApi": {
            "Type": "AWS::ApiGatewayV2::Integration",
            "Properties": {
              "ApiId": {
                "Ref": "HttpApi"
              },
              "IntegrationType": "AWS_PROXY",
              "IntegrationUri": {
                "$ref": "$[\"service\"][\"provider\"][\"compiledCloudFormationTemplate\"][\"Resources\"][\"ApiLambdaPermissionHttpApi\"][\"Properties\"][\"FunctionName\"]"
              },
              "PayloadFormatVersion": "2.0",
              "TimeoutInMillis": 30000
            }
          },
          "HttpApiRouteGetHello": {
            "Type": "AWS::ApiGatewayV2::Route",
            "Properties": {
              "ApiId": {
                "Ref": "HttpApi"
              },
              "RouteKey": "GET /hello",
              "Target": {
                "Fn::Join": [
                  "/",
                  [
                    "integrations",
                    {
                      "Ref": "HttpApiIntegrationApi"
                    }
                  ]
                ]
              }
            },
            "DependsOn": "HttpApiIntegrationApi"
          },
          "ApiUnderscoretwoLambdaPermissionHttpApi": {
            "Type": "AWS::Lambda::Permission",
            "Properties": {
              "FunctionName": {
                "Fn::GetAtt": [
                  "ApiUnderscoretwoLambdaFunction",
                  "Arn"
                ]
              },
              "Action": "lambda:InvokeFunction",
              "Principal": "apigateway.amazonaws.com",
              "SourceArn": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":execute-api:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId"
                    },
                    ":",
                    {
                      "Ref": "HttpApi"
                    },
                    "/*"
                  ]
                ]
              }
            }
          },
          "HttpApiIntegrationApiUnderscoretwo": {
            "Type": "AWS::ApiGatewayV2::Integration",
            "Properties": {
              "ApiId": {
                "Ref": "HttpApi"
              },
              "IntegrationType": "AWS_PROXY",
              "IntegrationUri": {
                "$ref": "$[\"service\"][\"provider\"][\"compiledCloudFormationTemplate\"][\"Resources\"][\"ApiUnderscoretwoLambdaPermissionHttpApi\"][\"Properties\"][\"FunctionName\"]"
              },
              "PayloadFormatVersion": "2.0",
              "TimeoutInMillis": 30000
            }
          },
          "HttpApiRouteGetBuy": {
            "Type": "AWS::ApiGatewayV2::Route",
            "Properties": {
              "ApiId": {
                "Ref": "HttpApi"
              },
              "RouteKey": "GET /buy",
              "Target": {
                "Fn::Join": [
                  "/",
                  [
                    "integrations",
                    {
                      "Ref": "HttpApiIntegrationApiUnderscoretwo"
                    }
                  ]
                ]
              }
            },
            "DependsOn": "HttpApiIntegrationApiUnderscoretwo"
          },
          "ApiUnderscorethreeLambdaPermissionHttpApi": {
            "Type": "AWS::Lambda::Permission",
            "Properties": {
              "FunctionName": {
                "Fn::GetAtt": [
                  "ApiUnderscorethreeLambdaFunction",
                  "Arn"
                ]
              },
              "Action": "lambda:InvokeFunction",
              "Principal": "apigateway.amazonaws.com",
              "SourceArn": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":execute-api:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId"
                    },
                    ":",
                    {
                      "Ref": "HttpApi"
                    },
                    "/*"
                  ]
                ]
              }
            }
          },
          "HttpApiIntegrationApiUnderscorethree": {
            "Type": "AWS::ApiGatewayV2::Integration",
            "Properties": {
              "ApiId": {
                "Ref": "HttpApi"
              },
              "IntegrationType": "AWS_PROXY",
              "IntegrationUri": {
                "$ref": "$[\"service\"][\"provider\"][\"compiledCloudFormationTemplate\"][\"Resources\"][\"ApiUnderscorethreeLambdaPermissionHttpApi\"][\"Properties\"][\"FunctionName\"]"
              },
              "PayloadFormatVersion": "2.0",
              "TimeoutInMillis": 30000
            }
          },
          "HttpApiRouteGetBuy2": {
            "Type": "AWS::ApiGatewayV2::Route",
            "Properties": {
              "ApiId": {
                "Ref": "HttpApi"
              },
              "RouteKey": "GET /buy2",
              "Target": {
                "Fn::Join": [
                  "/",
                  [
                    "integrations",
                    {
                      "Ref": "HttpApiIntegrationApiUnderscorethree"
                    }
                  ]
                ]
              }
            },
            "DependsOn": "HttpApiIntegrationApiUnderscorethree"
          }
        },
        "Outputs": {
          "ServerlessDeploymentBucketName": {
            "Value": "serverless-framework-deployments-ap-south-1-8910130b-bf30",
            "Export": {
              "Name": "sls-serverless-lambda-dev-ServerlessDeploymentBucketName"
            }
          },
          "ApiLambdaFunctionQualifiedArn": {
            "Description": "Current Lambda function version",
            "Value": {
              "Ref": "ApiLambdaVersion71LtuZ6DFDNZfqVno8ye1BDW3N6ouYST3jxB6YLf72E"
            },
            "Export": {
              "Name": "sls-serverless-lambda-dev-ApiLambdaFunctionQualifiedArn"
            }
          },
          "ApiUnderscoretwoLambdaFunctionQualifiedArn": {
            "Description": "Current Lambda function version",
            "Value": {
              "Ref": "ApiUnderscoretwoLambdaVersionmr6Z3icNvrsJon2M7vLtQECUa3sITkZf62Pxq0cJCA"
            },
            "Export": {
              "Name": "sls-serverless-lambda-dev-ApiUnderscoretwoLambdaFunctionQualifiedArn"
            }
          },
          "ApiUnderscorethreeLambdaFunctionQualifiedArn": {
            "Description": "Current Lambda function version",
            "Value": {
              "Ref": "ApiUnderscorethreeLambdaVersion96OwOpfN63Yy7xOh9LzwCzXXgRjrkekGuSAqq7FeqE"
            },
            "Export": {
              "Name": "sls-serverless-lambda-dev-ApiUnderscorethreeLambdaFunctionQualifiedArn"
            }
          },
          "HttpApiId": {
            "Description": "Id of the HTTP API",
            "Value": {
              "Ref": "HttpApi"
            },
            "Export": {
              "Name": "sls-serverless-lambda-dev-HttpApiId"
            }
          },
          "HttpApiUrl": {
            "Description": "URL of the HTTP API",
            "Value": {
              "Fn::Join": [
                "",
                [
                  "https://",
                  {
                    "Ref": "HttpApi"
                  },
                  ".execute-api.",
                  {
                    "Ref": "AWS::Region"
                  },
                  ".",
                  {
                    "Ref": "AWS::URLSuffix"
                  }
                ]
              ]
            },
            "Export": {
              "Name": "sls-serverless-lambda-dev-HttpApiUrl"
            }
          }
        }
      },
      "vpc": {}
    },
    "pluginsData": {},
    "functions": {
      "api": {
        "handler": "helloo.handler",
        "events": [
          {
            "httpApi": {
              "path": "/hello",
              "method": "GET"
            },
            "resolvedMethod": "GET",
            "resolvedPath": "/hello"
          }
        ],
        "name": "serverless-lambda-dev-api",
        "package": {},
        "memory": 1024,
        "timeout": 6,
        "runtime": "nodejs20.x",
        "vpc": {},
        "versionLogicalId": "ApiLambdaVersion71LtuZ6DFDNZfqVno8ye1BDW3N6ouYST3jxB6YLf72E"
      },
      "api_two": {
        "handler": "buy.handler",
        "events": [
          {
            "httpApi": {
              "path": "/buy",
              "method": "GET"
            },
            "resolvedMethod": "GET",
            "resolvedPath": "/buy"
          }
        ],
        "name": "serverless-lambda-dev-api_two",
        "package": {},
        "memory": 1024,
        "timeout": 6,
        "runtime": "nodejs20.x",
        "vpc": {},
        "versionLogicalId": "ApiUnderscoretwoLambdaVersionmr6Z3icNvrsJon2M7vLtQECUa3sITkZf62Pxq0cJCA"
      },
      "api_three": {
        "handler": "buy.handler",
        "events": [
          {
            "httpApi": {
              "path": "/buy2",
              "method": "GET"
            },
            "resolvedMethod": "GET",
            "resolvedPath": "/buy2"
          }
        ],
        "name": "serverless-lambda-dev-api_three",
        "package": {},
        "memory": 1024,
        "timeout": 6,
        "runtime": "nodejs20.x",
        "vpc": {},
        "versionLogicalId": "ApiUnderscorethreeLambdaVersion96OwOpfN63Yy7xOh9LzwCzXXgRjrkekGuSAqq7FeqE"
      }
    },
    "configValidationMode": "warn",
    "serviceFilename": "serverless.yml",
    "initialServerlessConfig": {
      "org": "student123123",
      "app": "serverless-lambda",
      "service": "serverless-lambda",
      "provider": {
        "$ref": "$[\"service\"][\"provider\"]"
      },
      "functions": {
        "$ref": "$[\"service\"][\"functions\"]"
      }
    },
    "app": "serverless-lambda",
    "appId": null,
    "org": "student123123",
    "orgId": null,
    "layers": {},
    "artifact": "/Users/hirakroy/Documents/GitHub/serverless-lambda/.serverless/serverless-lambda.zip"
  },
  "package": {
    "artifactDirectoryName": "serverless/serverless-lambda/dev/1734159030147-2024-12-14T06:50:30.147Z",
    "artifact": "serverless-lambda.zip"
  }
}